type GroupCreated @entity(immutable: true) {
  id: String!
  name: String!
  image: String!
  details: String!
  creator: Bytes!
  addr: Bytes!
  achievements: [Achievement!]! @derivedFrom(field: "group")
  members: [Member!]! @derivedFrom(field: "group")
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Achievement @entity {
  id: String!
  tokenId: BigInt!
  group: GroupCreated!
  description: String
  metadata: NFTMetadata
  locked: Boolean
}

type Member @entity {
  id: ID!
  group: GroupCreated!
  address: Bytes
  tokenboundAccount: Bytes
}

type AchievementContract @entity {
  id: ID!
  group: GroupCreated!
  creationTime: BigInt
}

type AchievementReward @entity {
  id: ID!
  member: Member!
  achievementId: BigInt
  achievement: Achievement!
  amount: BigInt
}

type GroupTokenContract @entity {
  id: ID!
  group: GroupCreated!
  totalSupply: BigInt
  balanceOfs: [BigInt!]!
}

type AchievementBatchRewarded @entity {
  id: ID!
  member: String!
  achievementIds: [BigInt!]!
  amounts: [BigInt!]!
}

type NFTMetadata @entity {
  id: String!
  name: String
  description: String
  image: String
  externalUrl: String
  animationUrl: String
  youtubeUrl: String
  backgroundColor: String
  attributes: [Attribute!]
  properties: Properties
  levels: [Level!]
  developer: Developer
  createdDate: String
  category: String
  achievement: Achievement
}

type Attribute @entity {
  id: ID!
  traitType: String
  value: String
}

type Properties @entity {
  id: ID!
  level: String
  type: String
}

type Level @entity {
  id: ID!
  level: Int
  name: String
}

type Developer @entity {
  id: ID!
  project: String
  version: String
}
